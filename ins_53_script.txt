# [1] pc: 0x00010104, insn: 0xfee7d0e3 => bge x15, x14, 0x000100e4
                # top stack elements is the start root, push it to altstack for later
                OP_TOALTSTACK
        
        # rs1 on stack
        OP_DUP OP_TOALTSTACK
        # rs1 inclusion
        
        # on stack is merkle proof for register. We already know the location in RAM, so only
        # nodes are needed.
        
        # On stack is element checked for inclusion, and path.
        # Hash element
        OP_SHA256
        OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256

        
        OP_FROMALTSTACK # current element from alt stack
        OP_FROMALTSTACK # current element from alt stack
OP_DUP
        
        OP_SWAP OP_TOALTSTACK
        OP_SWAP OP_TOALTSTACK
        # Check that it matches root.
        OP_EQUALVERIFY
        
        
        # rs2 on stack
        OP_DUP OP_TOALTSTACK
        # rs2 inclusion
        
        # on stack is merkle proof for register. We already know the location in RAM, so only
        # nodes are needed.
        
        # On stack is element checked for inclusion, and path.
        # Hash element
        OP_SHA256
        OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256
OP_CAT OP_SHA256
OP_SWAP
OP_CAT OP_SHA256

        
        OP_FROMALTSTACK # current element from alt stack
        OP_FROMALTSTACK # current element from alt stack
        OP_FROMALTSTACK # current element from alt stack
OP_DUP
        
        OP_SWAP OP_TOALTSTACK
        OP_SWAP OP_TOALTSTACK
        OP_SWAP OP_TOALTSTACK
        # Check that it matches root.
        OP_EQUALVERIFY
        
        
    040101 # pc
    OP_FROMALTSTACK # rs2
    OP_FROMALTSTACK # rs1
    OP_SWAP
    OP_GREATERTHANOREQUAL # rs1 >= rs2
    OP_IF
        e40001 # pc+offset
    OP_ELSE
        080101 # pc+4
    OP_ENDIF

    # pc inclusion
           
            # hash new leaf
            OP_SHA256 OP_TOALTSTACK

            # hash old leaf
            OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
# Use merkle sibling together with new leaf on alt stack to find new merkle
# node and push it to the altstack.
OP_2DUP OP_DROP # duplicate sibling
OP_FROMALTSTACK # get new node from alt stack
OP_SWAP # swap direcion
        
OP_CAT OP_SHA256 OP_TOALTSTACK # combine to get new node to altstack
        
OP_SWAP # swap direcion
        
# Do the same with the current merkle leaf.
OP_CAT OP_SHA256
        
        OP_FROMALTSTACK # new root from alt stack
        OP_SWAP

        OP_FROMALTSTACK # current element from alt stack
OP_DUP
        
        OP_SWAP OP_TOALTSTACK
OP_EQUALVERIFY # verify old root
        

       # check input commitment
       OP_FROMALTSTACK
        OP_CAT
        OP_SHA256
        OP_0 # index
        OP_0 # nums key
        81 # current taptree
        OP_1 # flags, check input
        OP_CHECKCONTRACTVERIFY
         OP_1
